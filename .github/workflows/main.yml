name: Run Ubuntu VM with Ngrok

on:
  push:
    branches:
      - main

jobs:
  build-vm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set Up QEMU/KVM
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-kvm libvirt-daemon virtinst bridge-utils

    - name: Check libvirt Service Status
      run: |
        sudo systemctl status libvirtd

    - name: Check virbr0 Interface
      run: |
        ip link show virbr0

    - name: Create VM Disk
      run: |
        qemu-img create -f qcow2 ubuntu-vm.qcow2 20G

    - name: Install Ubuntu Server
      run: |
        virt-install --name ubuntu-vm --memory 2048 --vcpus 2 --disk path=ubuntu-vm.qcow2 --cdrom http://archive.ubuntu.com/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/mini.iso --os-type linux --os-variant ubuntu20.04 --network bridge=virbr0 --graphics vnc,listen=0.0.0.0

  expose-vm:
    runs-on: ubuntu-latest
    needs: build-vm
    steps:
    - name: Install Ngrok
      run: |
        sudo apt-get install -y unzip
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip
        chmod +x ngrok
        sudo mv ngrok /usr/local/bin/ngrok

    - name: Start Ngrok
      run: |
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        ./ngrok tcp 5900 &

    - name: Display Ngrok URL
      run: |
        sleep 5
        curl http://localhost:4040/api/tunnels

  interact-vm:
    runs-on: ubuntu-latest
    needs: expose-vm
    steps:
    - name: Wait for Ngrok Tunnel
      run: sleep 30  # Wait for Ngrok tunnel to be established

    - name: Connect to VM via SSH
      run: |
        ssh -L 5900:localhost:5900 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -Nf -p 22 user@0.tcp.ngrok.io

    - name: Display SSH Connection Information
      run: |
        echo "Connect to the VM using a VNC client with the following information:"
        curl http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'  # Requires jq
